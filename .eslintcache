[{"E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\index.js":"1","E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\App.js":"2","E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\components\\Header.js":"3","E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\pages\\BubbleSort.js":"4","E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\pages\\Home.js":"5","E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\pages\\SelectionSort.js":"6","E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\components\\Sorter.js":"7","E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\components\\Bar.js":"8","E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\algorithms\\bubbleSortAlgorithm.js":"9","E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\algorithms\\selectionSortAlgorithm.js":"10","E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\pages\\InsertionSort.js":"11","E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\algorithms\\insertionSortAlgorithm.js":"12","E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\pages\\QuickSort.js":"13","E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\algorithms\\quickSortAlgorithm.js":"14","E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\pages\\MergeSort.js":"15","E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\algorithms\\mergeSortAlgorithm.js":"16","E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\components\\InfoSection.js":"17","E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\pages\\HeapSort.js":"18","E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\algorithms\\heapSortAlgorithm.js":"19"},{"size":219,"mtime":1612035851968,"results":"20","hashOfConfig":"21"},{"size":931,"mtime":1617940878513,"results":"22","hashOfConfig":"21"},{"size":3608,"mtime":1618093667922,"results":"23","hashOfConfig":"21"},{"size":1098,"mtime":1618092266076,"results":"24","hashOfConfig":"21"},{"size":4775,"mtime":1618459510384,"results":"25","hashOfConfig":"21"},{"size":1096,"mtime":1618092266035,"results":"26","hashOfConfig":"21"},{"size":5332,"mtime":1618087075514,"results":"27","hashOfConfig":"21"},{"size":415,"mtime":1613973583509,"results":"28","hashOfConfig":"21"},{"size":1291,"mtime":1613860053987,"results":"29","hashOfConfig":"21"},{"size":1073,"mtime":1613860210328,"results":"30","hashOfConfig":"21"},{"size":1123,"mtime":1618092266076,"results":"31","hashOfConfig":"21"},{"size":986,"mtime":1613860363843,"results":"32","hashOfConfig":"21"},{"size":1264,"mtime":1618092266077,"results":"33","hashOfConfig":"21"},{"size":1262,"mtime":1618461665583,"results":"34","hashOfConfig":"21"},{"size":1121,"mtime":1618092266076,"results":"35","hashOfConfig":"21"},{"size":0,"mtime":1613536686901,"results":"36","hashOfConfig":"21"},{"size":1145,"mtime":1618033258899,"results":"37","hashOfConfig":"21"},{"size":1122,"mtime":1618092128847,"results":"38","hashOfConfig":"21"},{"size":1338,"mtime":1614046286202,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"2x1jen",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\index.js",[],["80","81"],"E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\App.js",[],"E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\components\\Header.js",[],"E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\pages\\BubbleSort.js",[],"E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\pages\\Home.js",[],"E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\pages\\SelectionSort.js",[],"E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\components\\Sorter.js",["82","83"],"import { React, useState, useEffect } from 'react';\r\nimport Bar from './Bar';\r\n\r\nconst Sorter = ({ sortingAlgorithm, btnColor }) => {\r\n  const [arraySize, setArraySize] = useState(50);\r\n  const [speed, setSpeed] = useState(6);\r\n  const [maxArraySize, setMaxArraySize] = useState(80);\r\n  const [sorterArray, setSorterArray] = useState([]);\r\n  const [sorterArrayOriginal, setSorterArrayOriginal] = useState([]);\r\n  const [intervalId, setIntervalId] = useState(null);\r\n  const [sorting, setSorting] = useState(false);\r\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const arr = [];\r\n    for (let x = 0; x < 50; x++) {\r\n      arr.push({\r\n        index: x,\r\n        color: null,\r\n        value: Math.round(Math.random() * (50 - 1) + 1),\r\n      });\r\n    }\r\n    setSorterArray(...[arr]);\r\n    setSorterArrayOriginal([...arr]);\r\n\r\n    window.addEventListener('resize', () => setScreenWidth(window.innerWidth));\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (screenWidth >= 1640) {\r\n      setArraySize(50);\r\n      setMaxArraySize(80);\r\n      randomizeArray(50);\r\n    } else if (screenWidth > 1440 && screenWidth < 1640) {\r\n      setArraySize(50);\r\n      setMaxArraySize(70);\r\n      randomizeArray(50);\r\n    } else if (screenWidth > 1240 && screenWidth < 1440) {\r\n      setArraySize(50);\r\n      setMaxArraySize(60);\r\n      randomizeArray(50);\r\n    } else if (screenWidth > 1040 && screenWidth < 1240) {\r\n      setArraySize(50);\r\n      setMaxArraySize(50);\r\n      randomizeArray(50);\r\n    } else if (screenWidth > 840 && screenWidth < 1040) {\r\n      setArraySize(40);\r\n      setMaxArraySize(40);\r\n      randomizeArray(40);\r\n    } else if (screenWidth > 640 && screenWidth < 840) {\r\n      setArraySize(30);\r\n      setMaxArraySize(30);\r\n      randomizeArray(30);\r\n    } else if (screenWidth > 440 && screenWidth < 640) {\r\n      setArraySize(20);\r\n      setMaxArraySize(20);\r\n      randomizeArray(20);\r\n    } else if (screenWidth > 300 && screenWidth < 440) {\r\n      setArraySize(10);\r\n      setMaxArraySize(15);\r\n      randomizeArray(10);\r\n    }\r\n  }, [screenWidth]);\r\n\r\n  const randomizeArray = (arraySize) => {\r\n    clearInterval(intervalId);\r\n    setSorting(false);\r\n    const arr = [];\r\n    for (let x = 0; x < arraySize; x++) {\r\n      arr.push({\r\n        index: x,\r\n        color: null,\r\n        value: Math.round(Math.random() * (arraySize - 1) + 1),\r\n      });\r\n    }\r\n    setSorterArray(...[arr]);\r\n    setSorterArrayOriginal([...arr]);\r\n  };\r\n\r\n  const interpreteChanges = (changeList) => {\r\n    const len = changeList.length;\r\n    let x = 0;\r\n    let barUpdateInterval = setInterval(() => {\r\n      const newState = sorterArray;\r\n      newState[changeList[x].index] = changeList[x];\r\n      setSorterArray([...newState]);\r\n\r\n      if (x === len - 1) {\r\n        clearInterval(barUpdateInterval);\r\n        setSorting(false);\r\n      }\r\n      x++;\r\n    }, (9 - speed) * 30);\r\n    return barUpdateInterval;\r\n  };\r\n\r\n  const onClickSort = () => {\r\n    setSorting(true);\r\n    const arr = sorterArray.map((i) => i.value);\r\n    setIntervalId(interpreteChanges(sortingAlgorithm(arr)));\r\n  };\r\n\r\n  const onClickReset = () => {\r\n    clearInterval(intervalId);\r\n    setIntervalId(null);\r\n    setSorterArray([...sorterArrayOriginal]);\r\n    setSorting(false);\r\n  };\r\n\r\n  const onChangeArraySize = (e) => {\r\n    setArraySize(e.target.value);\r\n    randomizeArray(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='mt-5'>\r\n      <div className='flex items-end justify-center mb-3 h-80'>\r\n        {sorterArray.map((i) => (\r\n          <Bar\r\n            key={i.index}\r\n            number={i.value}\r\n            itemsAmount={arraySize}\r\n            color={i.color}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className='flex flex-wrap justify-center space-x-2'>\r\n        <button\r\n          className={`bg-${btnColor}-600 text-gray-200 rounded px-4 mb-2 py-1 focus:outline-none ${\r\n            sorting ? 'bg-opacity-50' : 'hover:bg-gray-600'\r\n          }`}\r\n          onClick={onClickSort}\r\n          disabled={sorting}\r\n        >\r\n          Sort\r\n        </button>\r\n        <button\r\n          className={`bg-${btnColor}-600 text-gray-200 rounded px-4 mb-2 py-1 focus:outline-none hover:bg-gray-600`}\r\n          onClick={onClickReset}\r\n        >\r\n          Reset\r\n        </button>\r\n        <button\r\n          className={`bg-${btnColor}-600 text-gray-200 rounded hover:bg-gray-600 px-4 mb-2 py-1 focus:outline-none`}\r\n          onClick={() => randomizeArray(arraySize)}\r\n        >\r\n          Randomize\r\n        </button>\r\n        <div className='flex items-center space-x-1 mb-2'>\r\n          <p>Array Size: {arraySize}</p>\r\n          <input\r\n            type='range'\r\n            min={10}\r\n            max={maxArraySize}\r\n            value={arraySize}\r\n            onChange={onChangeArraySize}\r\n            disabled={sorting}\r\n          />\r\n        </div>\r\n        <div className='flex items-center space-x-1 mb-2'>\r\n          <p>Speed</p>\r\n          <input\r\n            type='range'\r\n            min={1}\r\n            max={8}\r\n            value={speed}\r\n            onChange={(e) => setSpeed(e.target.value)}\r\n            disabled={sorting}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sorter;\r\n","E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\components\\Bar.js",[],"E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\algorithms\\bubbleSortAlgorithm.js",[],"E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\algorithms\\selectionSortAlgorithm.js",[],"E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\pages\\InsertionSort.js",[],"E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\algorithms\\insertionSortAlgorithm.js",[],"E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\pages\\QuickSort.js",[],"E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\algorithms\\quickSortAlgorithm.js",[],"E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\pages\\MergeSort.js",[],"E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\algorithms\\mergeSortAlgorithm.js",[],"E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\components\\InfoSection.js",[],"E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\pages\\HeapSort.js",[],"E:\\Users\\Aden\\Documents\\GitHub\\sorting-algorithm-visualizer\\src\\algorithms\\heapSortAlgorithm.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":31,"column":6,"nodeType":"90","endLine":31,"endColumn":8,"suggestions":"91"},{"ruleId":"88","severity":1,"message":"92","line":67,"column":6,"nodeType":"90","endLine":67,"endColumn":19,"suggestions":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'intervalId'. Either include it or remove the dependency array.","ArrayExpression",["96"],"React Hook useEffect has a missing dependency: 'randomizeArray'. Either include it or remove the dependency array.",["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [intervalId]",{"range":"102","text":"103"},"Update the dependencies array to be: [randomizeArray, screenWidth]",{"range":"104","text":"105"},[1023,1025],"[intervalId]",[2149,2162],"[randomizeArray, screenWidth]"]